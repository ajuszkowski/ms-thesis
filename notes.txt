NEXT
//- simplify unrolling tests for integers
- add more tests on unrolling (for different types of loops)
- document code in FlowGraphUnrollingTraverser.java
- add actors that collect information
- do encoding!


links:
> x86-tso litmus test write buffer
http://www.cl.cam.ac.uk/~pes20/weakmemory/index3.html
http://www.cl.cam.ac.uk/~pes20/weakmemory/x86tso-paper.pdf paper
http://www.cl.cam.ac.uk/~pes20/weakmemory/

Automatically Comparing Memory Consistency Models https://johnwickerson.github.io/papers/memalloy.pdf
Linux-Kernel Memory Model Workshop http://wiki.linuxplumbersconf.org/2017:linux-kernel_memory_model_workshop
kernel 1 https://lwn.net/Articles/718628/
kernel 2 https://lwn.net/Articles/720550/
kernel presentation http://www.rdrop.com/users/paulmck/scalability/paper/LinuxMM.2017.01.19a-ext.LCA.pdf
kernel video https://www.youtube.com/watch?v=ULFytshTvIY
Fences in Weak Memory Models http://www0.cs.ucl.ac.uk/staff/j.alglave/papers/cav10.pdf
memory-barriers.txt https://www.kernel.org/doc/Documentation/memory-barriers.txt

book principles of program analysis http://sist.shanghaitech.edu.cn/faculty/songfu/cav/PPA.pdf
from weak to weedy https://elinux.org/images/7/73/Deacon-weak-to-weedy.pdf
zappa slides http://www.di.ens.fr/~zappa/teaching/mpri/2016/fzn-mpri-2016-1.pdf
zappa slides http://www.di.ens.fr/~zappa/teaching/mpri/2016/fzn-mpri-2016-2.pdf
zappa slides http://www.di.ens.fr/~zappa/teaching/mpri/2016/fzn-mpri-2016-3.pdf

x86-TSO A Rigorous and Usable Programmer’s Model for x86 Multiprocessors http://www.cl.cam.ac.uk/~pes20/weakmemory/cacm.pdf
A Better x86 Memory Model: x86-TSO https://www.cl.cam.ac.uk/~pes20/weakmemory/x86tso-paper.tphols.pdf
A Tutorial Introduction to the ARM and POWER Relaxed Memory Models http://www.cl.cam.ac.uk/~pes20/ppc-supplemental/test7.pdf
Understanding POWER Multiprocessors https://www.cl.cam.ac.uk/~pes20/ppc-supplemental/pldi105-sarkar.pdf
Is Parallel Programming Hard 1https://mirrors.edge.kernel.org/pub/linux/kernel/people/paulmck/perfbook/perfbook-e1-rc2.pdf
Preshing http://preshing.com/20120930/weak-vs-strong-memory-models/
mit, Weak Memory Models: Balancing Definitional Simplicity and Implementation Flexibility https://arxiv.org/pdf/1707.05923.pdf
Weak Memory Models are a Strong Reminder for Programmers to use Synchronization Primitives http://cis.poly.edu/muller/CS623/weakmemory.htm
blog “Strong” and “weak” hardware memory models https://herbsutter.com/2012/08/02/strong-and-weak-hardware-memory-models/
ben-ari Principles of Concurrent and Distributed Programming http://www.weizmann.ac.il/sci-tea/benari/sites/sci-tea.benari/files/uploads/books/pcdp2-front.pdf
wiki https://en.wikipedia.org/wiki/Consistency_model#Relaxation_Models
//ms thesis Maximilian Senftleben: Operational Characterization of Weak Memory Consistency Models https://es.cs.uni-kl.de/publications/datarsg/Senf13.pdf 
slides mit: Beyond Sequential Consistency Relaxed Memory Models https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-823-computer-system-architecture-fall-2005/lecture-notes/l20_relaxedmm.pdf

florian publications https://tcs.cs.tu-bs.de/group/furbach/publications.html

paper: SAT-Based Image Computation with Application in Reachability Analysis https://cs.wmich.edu/~zijiang/pub/fmcad00.pdf
slides: sat-based model checking http://www.sti.uniurb.it/events/sfm06hv/slides/Gupta.pdf

